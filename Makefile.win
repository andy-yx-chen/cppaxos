cc=cl
link=link
LIBS=$(lib)

#Include the sources
!if exists ("sources")
!    include "sources"
!endif

#Default values for reserved Marcos
#USECRT, default to YES
!if !DEFINED(USE_MSVCRT) ||"$(USE_MSVCRT)" == ""
USE_MSVCRT=YES
!endif

#UMTYPE default to console
!if !DEFINED(UMTYPE) || "$(UMTYPE)" == ""
UMTYPE=console
!endif

#USE_UNICODE, default to YES
!if !DEFINED(USE_UNICODE) || "$(USE_UNICODE)" == ""
USE_UNICODE=YES
!endif

#UMENTRY, default to wmain
!if !DEFINED(UMENTRY) || "$(UMENTRY)" == ""
!    if "$(USE_UNICODE)" == "YES"
UMENTRY=wmain
!    else
UMENTRY=main
!    endif
!endif

#TARGETNAME, we don't allow TARGETNAME is undefined or is null
!if !DEFINED(TARGETNAME) || "$(TARGETNAME)" == ""
!error Unknown target name!
!endif

!if !DEFINED(TARGETPATH) || "$(TARGETPATH)" == ""
TARGETPATH=obj
!endif

#TARGETTYPE, default to exe 
!if !DEFINED(TARGETTYPE) || "$(TARGETTYPE)" == ""
TARGETTYPE=exe
!endif

!ifdef DEBUG
cflags=$(cflags) /D_DEBUG /Zi /Od
TARGETPATH=debug\$(TARGETPATH)
BIN_DIR=debug
!else
cflags=$(cflags) /Od
TARGETPATH=release\$(TARGETPATH)
BIN_DIR=release
!endif

!if "$(USE_UNICODE)" == "YES"
cflags=$(cflags) /D_UNICODE /DUNICODE
!endif

TARGETPATH=$(TARGETPATH)\$(CPU)

#generate directories
!if !EXIST("$(TARGETPATH)")
!    if ![-mkdir "$(TARGETPATH)"]
!    endif
!endif
#create objs list file
!if EXIST("$(TARGETPATH)\m_objs")
!    if [del "$(TARGETPATH)\m_objs"]
!    endif
!endif

!if ![-echo OBJS=\>>"$(TARGETPATH)\m_objs"]
!    if ![-for %i in ($(SOURCES)) do (echo %~dpni.obj\>>"$(TARGETPATH)\m_objs")]
!        include "$(TARGETPATH)\m_objs"
!    endif
!endif

#create src list file
!if EXIST("$(TARGETPATH)\m_src")
!    if [del "$(TARGETPATH)\m_src"]
!    endif
!endif

!if ![-for %i in ($(SOURCES)) do (echo %~dpni.obj:%i >> "$(TARGETPATH)\m_src")]
!    include "$(TARGETPATH)\m_src"
!endif

!if "$(USE_MSVCRT)" == "NO"
!    ifdef DEBUG
cflags=$(cflags) /MTd
!    else
cflags=$(cflags) /MT
!    endif
!else
!    ifdef DEBUG
cflags=$(cflags) /MDd
!    else
cflags=$(cflags) /MD
!    endif
!endif

TARGETPDB=$(TARGETNAME).pdb

#always enable debug for linking
LINKFLAGS=$(LINKFLAGS) /DEBUG

!if "$(UMTYPE)" == "console"
LINKFLAGS=$(LINKFLAGS) $(conlflags) /pdb:"$(TARGETPATH)\$(TARGETPDB)"
USE_LIBS=$(USE_LIBS) $(conlibs)
!elseif "$(UMTYPE)" == "windows"
LINKFLAGS=$(LINKFLAGS) $(guilflags) /pdb:"$(TARGETPATH)\$(TARGETPDB)"
USE_LIBS=$(USE_LIBS) $(guilibs)
!elseif "$(UMTYPE)" == "dll"
LINKFLAGS=$(LINKFLAGS) $(dlllflags) /pdb:"$(TARGETPATH)\$(TARGETPDB)"
USE_LIBS=$(USE_LIBS) $(conlibs)
TARGETTYPE=dll
!else
link=lib.exe
TARGETTYPE=lib
LINKFLAGS=
!endif

!if "$(UMTYPE)" != "lib"
!   ifndef DEBUG
LINKFLAGS=$(LINKFLAGS) /PDBSTRIPPED:"$(TARGETPATH)\$(TARGETNAME).pri"
!   endif
!endif

!if "$(TARGETTYPE)" == "exe"
_TARGETNAME=$(TARGETNAME).exe
!elseif "$(TARGETTYPE)" == "dll"
_TARGETNAME=$(TARGETNAME).dll
!elseif "$(TARGETTYPE)" == "lib"
_TARGETNAME=$(TARGETNAME).lib
!endif

!if "$(INCLUDES)" != ""
cflags=$(cflags) /I"$(INCLUDES)"
!endif

!if DEFINED(LIBS) && "$(LIBS)" != ""
LINKFLAGS=$(LINKFLAGS) /LIBPATH:"$(LIBS)"
!endif

all:$(_TARGETNAME)

$(_TARGETNAME):$(OBJS)
    $(link) $(LINKFLAGS) /out:"$(_TARGETNAME)" $(USE_LIBS) $**
    @for %i in ($(SOURCES)) do (move /Y %~dpni.obj "$(TARGETPATH)\%~ni.obj")
    @-copy /Y *.pdb "$(TARGETPATH)\"
    @-del /Q *.pdb
    @-copy /Y *.ilk "$(TARGETPATH)\"
    @-del /Q *.ilk
    @copy /Y $(_TARGETNAME) "$(TARGETPATH)\$(_TARGETNAME)"
    @del /Q $(_TARGETNAME)
.c.obj:
    $(cc) /c $(cflags) /Fo$@ $<

.cpp.obj:
    $(cc) /c $(cflags) /Fo$@ /EHac $<

.cxx.obj:
    $(cc) /c $(cflags) /Fo$@ /EHac $<

clean:
    @rd /s /q "$(BIN_DIR)"
    @del *.obj
    @del *.pdb
    @echo successfully clean up!
